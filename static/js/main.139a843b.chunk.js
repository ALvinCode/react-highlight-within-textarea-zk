(this["webpackJsonpreact-highlight-within-textarea-example"]=this["webpackJsonpreact-highlight-within-textarea-example"]||[]).push([[0],{15:function(e,t,n){e.exports=n(23)},21:function(e,t,n){},23:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),i=n(5),l=n.n(i),o=(n(20),n(21),n(6)),h=n(11),s=n(9),c=n(10),g=n(8),u=n(12);n(22);var m=[["String","Note that this is case-insensitive.","Potato potato tomato potato.","'potato'","potato"],["RegExp",r.a.createElement("span",null,"Don't forget the ",r.a.createElement("code",null,"g")," (find all) and ",r.a.createElement("code",null,"i")," (case-insensitive) flags if you need them."),"Dog, cat, chicken, goose. Dogs, cats, chickens, geese.","/dogs?|cats?|g(oo|ee)se/gi",/dogs?|cats?|g(oo|ee)se/gi],["Array of Two Numbers (Range)","An array of exactly two numbers is treated as a range. Highlighting starts at the first character index (inclusive) and ends at the second character index (exclusive).","abcdefgh","[2, 6]",[2,6]],["Array of Other Things","You can highlight multiple things, using any types mentioned here, with an array.","apple watermelon banana orange mango","[\n    'orange',\n    /ba(na)*/gi,\n    [0, 5]\n  ]",["orange",/ba(na)*/gi,[0,5]]],["Function",r.a.createElement("span",null,"You can use a function for custom logic. It can return any of the types mentioned here. Return anything falsey (",r.a.createElement("code",null,"false"),", ",r.a.createElement("code",null,"undefined"),", etc.) to indicate no highlighting. The current textarea input is provided to it for convenience."),"Sun Mon Tue Wed Thu Fri Sat :) <-- remove the smiley...","function getSmileyDayString(input) {\n    const dayStrings = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n    if (input.indexOf(':)') !== -1) {\n        let dayIndex = (new Date()).getDay();\n        return dayStrings[dayIndex];\n    } else {\n        // no smiley, no highlighting\n        return false;\n    }\n  }",function(e){return-1!==e.indexOf(":)")&&["sun","mon","tue","wed","thu","fri","sat"][(new Date).getDay()]}],["Custom Object (with Class Name)",r.a.createElement("span",null,"Any type mentioned here can be put in an object wrapper with ",r.a.createElement("code",null,"highlight")," and ",r.a.createElement("code",null,"className")," properties. This lets you set CSS classes in the highlight markup for custom styling, such as changing the highlight color."),"Here's a blueberry. There's a strawberry. Surprise, it's a banananana!","[\n    {\n      highlight: 'strawberry',\n      className: 'red'\n    },\n    {\n      highlight: 'blueberry',\n      className: 'blue'\n    },\n    {\n      highlight: /ba(na)*/gi,\n      className: 'yellow'\n    }\n  ]",[{highlight:"strawberry",className:"red"},{highlight:"blueberry",className:"blue"},{highlight:/ba(na)*/gi,className:"yellow"}]],["Coming Soon: Custom Object (with Enhancements)",r.a.createElement("span",null,"The div behind the highlighted span can have enhancement javascript injected."),"Here's a blueberry. There's a strawberry.",'[\n    {\n      highlight: /[^ ]*berry/gi,\n      enhancement: ToolTip,\n      className: \'yellow\',\n    },\n    {\n      highlight: \'blue\',\n      enhancement: MultiColor,\n      className: \'blue\',\n    },\n  ]\n\n  function ToolTip(props) {\n    const content = (\n      <div style={{whiteSpace: "pre"}}>\n        {JSON.stringify(props, 0, 1)}\n      </div>\n    )\n    return (\n      <Tippy content={content} maxHeight="800px" maxWidth="800px">\n        <div style={{zIndex: 1, backgroundColor: "transparent"}}></div>\n      </Tippy>\n    )\n  }\n\n  function MultiColor(props) {\n    const [color, setColor] = useState(0xff8800);\n    const colorText = `#${color.toString(16)}`\n\n    useEffect(() => {\n      const timer = setInterval(() => setColor(0x808080 | (color + 0x102030) % 0xFFFFFF), 200)\n      return () => clearInterval(timer)\n    })\n    return <div style={{width: "100%", height: "100%", backgroundColor: colorText}} />\n  }',[{highlight:/[^ ]*berry/gi,enhancement:function(e){var t=r.a.createElement("div",{style:{whiteSpace:"pre"}},JSON.stringify(e,0,1));return r.a.createElement(u.a,{content:t,maxHeight:"800px",maxWidth:"800px"},r.a.createElement("div",{style:{zIndex:1,backgroundColor:"transparent"}}))},className:"yellow"},{highlight:"blue",enhancement:function(e){var t=Object(a.useState)(16746496),n=Object(o.a)(t,2),i=n[0],l=n[1],h="#".concat(i.toString(16));return Object(a.useEffect)(()=>{var e=setInterval(()=>l(8421504|(i+1056816)%16777215),200);return()=>clearInterval(e)}),r.a.createElement("div",{style:{width:"100%",height:"100%",backgroundColor:h}})},className:"blue"}]]],d=({title:e,text:t,initialValue:n,highlightText:i,highlight:l})=>{var h=Object(a.useState)(n),u=Object(o.a)(h,2),m=u[0],d=u[1];return r.a.createElement(s.a,null,r.a.createElement(c.a,null,r.a.createElement("h2",null,e),r.a.createElement("p",null,t),r.a.createElement(g.a,{value:m,highlight:l,onChange:e=>d(e.target.value),rows:"4",containerStyle:{width:"100%"},style:{width:"100%"}}),r.a.createElement("pre",null,"function Demo() ","{",r.a.createElement("br",null),"  ","const highlight = ",(e=>{var t=e.split("\n"),n=[];for(var a in t)n.push(r.a.createElement("span",{key:a},t[a])),n.push(r.a.createElement("br",{key:"b"+a}));return n.pop(),n})(i),";",r.a.createElement("br",null),r.a.createElement("br",null),"  ","return <HighlightWithinTextarea highlight={highlight} />;",r.a.createElement("br",null),"}")))},p=()=>r.a.createElement(h.a,{style:{maxWidth:800,border:20,margin:"auto"}},m.map(e=>r.a.createElement(d,{key:e[0],title:e[0],text:e[1],initialValue:e[2],highlightText:e[3],highlight:e[4]})));l.a.render(r.a.createElement(p,null),document.getElementById("root"))}},[[15,1,2]]]);
//# sourceMappingURL=main.139a843b.chunk.js.map