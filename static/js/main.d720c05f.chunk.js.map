{"version":3,"sources":["App.js","index.js","../../src/getRanges.js","../../src/getType.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/extractSpansOfClasses.js","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/HighlighedContents.js","../../src/HighlightWithinTextarea.js"],"names":["data","input","indexOf","Date","getDay","highlight","className","enhancement","props","useState","color","setColor","colorText","toString","useEffect","timer","setInterval","clearInterval","MarkView","style","backgroundColor","content","whiteSpace","JSON","stringify","position","maxWidth","height","width","background","zIndex","Example","title","text","initialValue","highlightText","value","setValue","Row","Col","onChange","event","target","rows","containerStyle","split","arr","index","push","key","pop","crToBR","App","Container","border","margin","map","d","ReactDOM","render","document","getElementById","getRanges","instance","type","Array","getType","ranges","getArrayRanges","func","getFunctionRanges","regex","match","getRegExpRanges","str","inputLower","strLower","getStringRanges","custom","range","getCustomRanges","console","css","ref","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Span","this","beginIndex","bind","c","beginIndex2","rightText","slice","right","Set","enhancedRanges","filter","s","spanProps","styles","fullText","endIndex","rangeBeginIndex","rangeEndIndex","wrapMarkView","React","EnhancedMarkView","markClasses","size","b","Symbol","for","e","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","A","getOwnPropertySymbols","module","require$$0","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","join","test3","forEach","letter","keys","err","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","emptyFunction","emptyFunctionWithReset","shim","propName","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","HighlighedContents","parts","spans","span","span2","span3","extractSpansOfClasses","part","containerClassName","textareaProps","onScroll","textareaRef","useRef","backdropRef","fakeValue","setFakeValue","handleScroll","blockContainerScroll"],"mappings":"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","file":"static/js/main.d720c05f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { HighlightWithinTextarea }  from './react-highlight-within-textarea'\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\n\nfunction ToolTip(props) {\n  const content = (\n    <div style={{whiteSpace: \"pre\"}}>\n      {JSON.stringify(props.data, 0, 1)}\n    </div>\n  )\n  const overlayStyle = {\n    position: \"absolute\",\n    height: \"50%\",\n    width: \"100%\",\n    background: \"transparent\",\n    zIndex: 1,\n  }\n\n  return (\n    <mark style={{position: \"relative\"}}>\n      <Tippy content={content} maxWidth=\"800px\">\n        <mark style={overlayStyle}></mark>\n      </Tippy>\n      <props.MarkView />\n    </mark>\n  )\n}\n\n\nfunction MultiColor(props) {\n  const [color, setColor] = useState(0xff8800);\n  const colorText = `#${color.toString(16)}`\n\n  useEffect(() => {\n    const timer = setInterval(() => setColor(0x808080 | (color + 0x081018) % 0xFFFFFF), 200)\n    return () => clearInterval(timer)\n  })\n  return <props.MarkView style={{backgroundColor: colorText}} />\n}\n\nlet data = [[\n  \"String\",\n  \"Note that this is case-insensitive.\",\n  \"Potato potato tomato potato.\",\n  `'potato'`,\n  'potato'\n],[\n  \"RegExp\",\n  <span>Don't forget the <code>g</code> (find all) and <code>i</code> (case-insensitive) flags if you need them.</span>,\n  \"Dog, cat, chicken, goose. Dogs, cats, chickens, geese.\",\n  `/dogs?|cats?|g(oo|ee)se/gi`,\n  /dogs?|cats?|g(oo|ee)se/gi\n],[\n  \"Array of Two Numbers (Range)\",\n  \"An array of exactly two numbers is treated as a range. Highlighting starts at the first character index (inclusive) and ends at the second character index (exclusive).\",\n  \"abcdefgh\",\n  \"[2, 6]\",\n  [2, 6]\n], [\n  \"Array of Other Things\",\n  \"You can highlight multiple things, using any types mentioned here, with an array.\",\n  \"apple watermelon banana orange mango\",\n  `[\n    'orange',\n    /ba(na)*/gi,\n    [0, 5]\n  ]`,\n  [ 'orange', /ba(na)*/gi, [0, 5] ]\n], [\n  \"Function\",\n  <span>You can use a function for custom logic. It can return any of the types mentioned here. Return anything falsey (<code>false</code>, <code>undefined</code>, etc.) to indicate no highlighting. The current textarea input is provided to it for convenience.</span>,\n  \"Sun Mon Tue Wed Thu Fri Sat :) <-- remove the smiley...\",\n   `function getSmileyDayString(input) {\n    const dayStrings = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n    if (input.indexOf(':)') !== -1) {\n        let dayIndex = (new Date()).getDay();\n        return dayStrings[dayIndex];\n    } else {\n        // no smiley, no highlighting\n        return false;\n    }\n  }`,\n  function getSmileyDayString(input) {\n    const dayStrings = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n    if (input.indexOf(':)') !== -1) {\n        let dayIndex = (new Date()).getDay();\n        return dayStrings[dayIndex];\n    } else {\n        // no smiley, no highlighting\n        return false;\n    }\n  }\n], [\n  \"Custom Object with Class Name\",\n  <span>Any type mentioned here can be put in an object wrapper with <code>highlight</code> and <code>className</code> properties. This lets you set CSS classes in the highlight markup for custom styling, such as changing the highlight color.</span>,\n  `Here's a blueberry. There's a strawberry. Surprise, it's a banananana!`,\n  `[\n    {\n      highlight: 'strawberry',\n      className: 'red'\n    },\n    {\n      highlight: 'blueberry',\n      className: 'blue'\n    },\n    {\n      highlight: /ba(na)*/gi,\n      className: 'yellow'\n    }\n  ]`,\n  [\n    {\n      highlight: 'strawberry',\n      className: 'red'\n    },\n    {\n      highlight: 'blueberry',\n      className: 'blue'\n    },\n    {\n      highlight: /ba(na)*/gi,\n      className: 'yellow'\n    }\n  ],\n], [\n  \"Custom Object with Enhancements (coming soon)\",\n  <span>\n  The div behind the highlighted span can be wrapped in an enhancement.\n  This React view receives properties, <code>data</code> which contains \n  information about the particular span and <code>MarkView</code> which \n  is the highlight that contains the text.  If there are\n  multiple enhancements, they will wrap around each other.  Also\n  note that a single highlight may be broken into two MarkViews if\n  it overlaps two highlights.  This effect can be seen below with\n  the two pairs of indexes.\n  </span>,\n  `Here's a blueberry. There's a strawberry.  I'm a little blue because there is a highlight bug where a blueberry's highlight gets split over line breaks in Chrome incorrectly.  This makes me berry sad.\nBut the blues go away after a newline is forced.`,\n  `[\n    {\n      highlight: 'blue',\n      enhancement: MultiColor,\n      className: 'blue',\n    },\n    {\n      highlight: /[^ ]*berry/gi,\n      enhancement: ToolTip,\n      className: 'yellow',\n    },\n  ]\n  \n  function ToolTip(props) {\n    const content = (\n      <div style={{whiteSpace: \"pre\"}}>\n        {JSON.stringify(props.data, 0, 1)}\n      </div>\n    )\n    const overlayStyle = {\n      position: \"absolute\",\n      height: \"50%\",\n      width: \"100%\",\n      background: \"transparent\",\n      zIndex: 1,\n    }\n  \n    return (\n      <mark style={{position: \"relative\"}}>\n        <Tippy content={content} maxWidth=\"800px\">\n          <mark style={overlayStyle}></mark>\n        </Tippy>\n        <props.MarkView />\n      </mark>\n    )\n  }\n  \n  function MultiColor(props) {\n    const [color, setColor] = useState(0xff8800);\n    const colorText = \\`#\\${color.toString(16)}\\`\n  \n    useEffect(() => {\n      const timer = setInterval(() => setColor(0x808080 | (color + 0x081018) % 0xFFFFFF), 200)\n      return () => clearInterval(timer)\n    })\n    return <props.MarkView style={{backgroundColor: colorText}} />\n  }`,\n  [\n    {\n      highlight: 'blue',\n      enhancement: MultiColor,\n      className: 'blue',\n    },\n    {\n      highlight: /[^ ]*berry/gi,\n      enhancement: ToolTip,\n      className: 'yellow',\n    },\n  ]\n]];\n\n\nconst crToBR = (text) => {\n  let split = text.split(\"\\n\");\n  let arr = [];\n\n  for (const index in split) {\n    arr.push(<span key={index}>{split[index]}</span>);\n    arr.push(<br key={\"b\" + index} />);\n  }\n  arr.pop();\n  return arr;\n}\n\nconst Example = ({title, text, initialValue, highlightText, highlight}) => {\n  const [value, setValue] = useState(initialValue);\n\n  return (\n    <Row>\n      <Col>\n        <h2>{title}</h2>\n        <p>{text}</p>\n        <HighlightWithinTextarea\n          value={value}\n          highlight={highlight}\n          onChange= {event => setValue(event.target.value)}\n          rows=\"4\"\n          containerStyle={{width: \"100%\"}}\n          style={{width: \"100%\"}}\n        />\n        <pre>\n          function Demo() {\"{\"}<br />\n          {\"  \"}const highlight = {crToBR(highlightText)};<br /><br />\n          {\"  \"}{\"return <HighlightWithinTextarea highlight={highlight} />;\"}<br />\n          {\"}\"}\n        </pre>\n      </Col>\n  </Row>\n  )\n}\n\nconst App = () => {\n  return (\n    <Container style={{maxWidth: 800, border: 20, margin: 'auto'}}>\n      {\n        data.map( (d) =>\n          <Example\n            key={d[0]}\n            title={d[0]}\n            text={d[1]}\n            initialValue={d[2]}\n            highlightText={d[3]}\n            highlight={d[4]}\n          />\n        )\n      }\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import getType from './getType'\n\nexport default function getRanges(input, highlight) {\n  const type = getType(highlight)\n  switch (type) {\n    case 'array':\n      return getArrayRanges(input, highlight)\n    case 'function':\n      return getFunctionRanges(input, highlight)\n    case 'regexp':\n      return getRegExpRanges(input, highlight)\n    case 'string':\n      return getStringRanges(input, highlight)\n    case 'range':\n      return getRangeRanges(input, highlight)\n    case 'custom':\n      return getCustomRanges(input, highlight)\n    default:\n      if (!highlight) {\n        // do nothing for falsey values\n        return []\n      } else {\n        console.error('unrecognized highlight type')\n      }\n  }\n}\n\nfunction getArrayRanges(input, arr) {\n  const ranges = arr.map(getRanges.bind(this, input))\n  return Array.prototype.concat.apply([], ranges)\n}\n\nfunction getFunctionRanges(input, func) {\n  return getRanges(input, func(input))\n}\n\nfunction getRegExpRanges(input, regex) {\n  const ranges = []\n  let match\n  while (((match = regex.exec(input)), match !== null)) {\n    ranges.push([match.index, match.index + match[0].length])\n    if (!regex.global) {\n      // non-global regexes do not increase lastIndex, causing an infinite loop,\n      // but we can just break manually after the first match\n      break\n    }\n  }\n  return ranges\n}\n\nfunction getStringRanges(input, str) {\n  const ranges = []\n  const inputLower = input.toLowerCase()\n  const strLower = str.toLowerCase()\n  let index = 0\n  while (((index = inputLower.indexOf(strLower, index)), index !== -1)) {\n    ranges.push([index, index + strLower.length])\n    index += strLower.length\n  }\n  return ranges\n}\n\nfunction getRangeRanges(input, range) {\n  return [range]\n}\n\nfunction getCustomRanges(input, custom) {\n  const ranges = getRanges(input, custom.highlight)\n  if (custom.className || custom.enhancement) {\n    ranges.forEach(function (range) {\n      // persist class name as a property of the array\n      if (custom.className) {\n        if (range.className) {\n          range.className = custom.className + ' ' + range.className\n        } else {\n          range.className = custom.className\n        }\n      }\n      if (custom.enhancement) {\n        if (range.enhancements) {\n          range.enhancements.unshift(custom.enhancement)\n        } else {\n          range.enhancements = [custom.enhancement]\n        }\n      }\n    })\n  }\n  return ranges\n}\n","// returns identifier strings that aren't necessarily \"real\" JavaScript types\nexport default function getType(instance) {\n    let type = typeof instance;\n    if (!instance) {\n        return 'falsey';\n    } else if (Array.isArray(instance)) {\n        if (instance.length === 2 && typeof instance[0] === 'number' && typeof instance[1] === 'number') {\n            return 'range';\n        } else {\n            return 'array';\n        }\n    } else if (type === 'object') {\n        if (instance instanceof RegExp) {\n            return 'regexp';\n        } else if (instance.hasOwnProperty('highlight')) {\n            return 'custom';\n        }\n    } else if (type === 'function' || type === 'string') {\n        return type;\n    }\n\n    return 'other';\n}","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\nimport styles from './styles/styles.css';\n\nclass Span {\n  constructor(text, beginIndex) {\n    this.beginIndex = beginIndex\n    this.endIndex = beginIndex + text.length // Like String.slice, it is inclusive.\n    this.text = text\n    this.fullText = text\n\n    this.isMark = false\n    this.ranges = []\n    this.markClasses = new Set()\n    this.MarkView = this.MarkView.bind(this)\n  }\n\n  addRange(range) {\n    this.isMark = true\n    if (range.className) {\n      for (const c of range.className.split(' ')) {\n        this.markClasses.add(c)\n      }\n    }\n    this.ranges.push(range)\n  }\n\n  carve(beginIndex2) {\n    // Carves self to take a bit off the right and returns that carving.\n    const rightText = this.text.slice(beginIndex2 - this.beginIndex)\n    this.text = this.text.slice(0, beginIndex2 - this.beginIndex)\n    this.endIndex = beginIndex2\n\n    const right = new Span(rightText, beginIndex2)\n    right.isMark = this.isMark\n    right.markClasses = new Set([...this.markClasses])\n    right.ranges = [...this.ranges]\n    right.fullText = this.fullText\n\n    return right\n  }\n\n  get className() {\n    if (this.markClasses && this.markClasses.size > 0) {\n      return [...this.markClasses].sort().join(' ')\n    } else {\n      return ''\n    }\n  }\n\n  EnhancedMarkView(MarkView) {\n    const enhancementViews = []\n    const enhancedRanges = this.ranges.filter(s => s.enhancements)\n    if (enhancedRanges.length === 0) {\n      return MarkView;\n    }\n\n    const spanProps = {\n      className: styles.enhanced,\n      text: this.text,\n      fullText: this.fullText,\n      beginIndex: this.beginIndex,\n      endIndex: this.endIndex,\n    }\n\n    function wrapMarkView(Enhancement, range, spanProps, MarkView) {\n      const data = {\n        ...spanProps,\n        rangeBeginIndex: range[0],\n        rangeEndIndex: range[1]\n      }\n      if (range.className) {\n        data.className = range.className\n      }\n      return React.forwardRef((props, ref) => {\n        return <Enhancement {...props} data={data} MarkView={MarkView} />\n      })\n    }\n\n    for (const range of enhancedRanges) {\n      for (const Enhancement of range.enhancements) {\n        MarkView = wrapMarkView(Enhancement, range, spanProps, MarkView);\n      }\n    }\n    return MarkView\n  }\n\n  MarkView(props, ref) {\n    props = {...props};\n    if (this.className && props.className) {\n      props.className = `${this.className} ${props.className}`;\n    } else if (this.className) {\n      props.className = this.className;\n    }\n\n    return (\n      <mark {...props}>{this.text}</mark>\n    )\n  }\n\n  render() {\n    if (this.isMark) {\n      const EnhancedMarkView = this.EnhancedMarkView(this.MarkView);\n      return (\n        <EnhancedMarkView key={this.beginIndex} />\n      )\n    } else {\n      return <span key={this.beginIndex}>{this.text}</span>\n    }\n  }\n}\n\nexport default function extractSpansOfClasses(value, ranges) {\n  /* Returns value broken into a series of Span classes.  These\n   * can be converted to JSX via the render command.\n   */\n\n  const spans = [new Span(value, 0)]\n\n  for (const range of ranges) {\n    let beginIndex = range[0]\n    const endIndex = range[1]\n\n    for (let i = 0; i < spans.length; i++) {\n      const span = spans[i]\n\n      // since spans are sorted, So this is always true: beginIndex >= span.beginIndex.\n      if (beginIndex < span.endIndex) {\n        if (beginIndex === span.beginIndex) {\n          if (endIndex < span.endIndex) {\n            // [range]\n            // [s  p  a  n]\n            const span2 = span.carve(endIndex)\n            span.addRange(range)\n            spans.splice(i + 1, 0, span2)\n            beginIndex = endIndex\n            i += 1\n          } else {\n            // [range]   or   [r a n g e]\n            // [span-]        [span]\n            span.addRange(range)\n            beginIndex = span.endIndex\n          }\n        } else {\n          if (endIndex < span.endIndex) {\n            //   [range]\n            // [s  p  a  n]\n            const span2 = span.carve(beginIndex)\n            const span3 = span2.carve(endIndex)\n            span2.addRange(range)\n            spans.splice(i + 1, 0, span2, span3)\n            beginIndex = endIndex\n            i += 2\n          } else {\n            //   [range]  or     [range]\n            // [s p a n]       [span]\n            const span2 = span.carve(beginIndex)\n            span2.addRange(range)\n            spans.splice(i + 1, 0, span2)\n            beginIndex = span2.endIndex\n            i += 1\n          }\n        }\n      }\n      if (beginIndex === endIndex) {\n        break\n      }\n    }\n  }\n  return spans\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React from 'react'\nimport styles from './styles/styles.css'\nimport getRanges from './getRanges'\nimport extractSpansOfClasses from './extractSpansOfClasses'\nimport PropTypes from 'prop-types'\n\nconst HighlighedContents = ({ value, highlight }) => {\n  const ranges = getRanges(value, highlight)\n  const parts = extractSpansOfClasses(value, ranges)\n\n  return (\n    <div>\n      <div className={`${styles.highlights} ${styles.content}`}>\n        {parts.map(part => part.render())}\n      </div>\n    </div>\n  )\n}\n\nHighlighedContents.propTypes = {\n  value: PropTypes.string.isRequired,\n  highlight: PropTypes.any.isRequired,\n}\n\nexport default HighlighedContents\n","import React, { useState, useRef } from 'react';\nimport styles from './styles/styles.css';\nimport HighlighedContents from './HighlighedContents';\n\nexport const HighlightWithinTextarea = ({value, onChange, highlight={}, className = \"\",  style={}, containerStyle={}, containerClassName=\"\", onScroll, ...textareaProps}) => {\n  let containerProps = {}\n  const textareaClassName = `${styles.input} ${styles.content}`;\n  const textareaRef = useRef(null);\n  const backdropRef = useRef(null);\n\n  className = `${styles.input} ${styles.content} ${className}`;\n  containerClassName = `${styles.container} ${containerClassName}`;\n\n  // Resizing is currently not supported\n  style.resize = \"none\";\n\n  // To properly work, value and onChange must be supplied.  Give a hint for new users.\n  const [fakeValue, setFakeValue] = useState(\"Please supply a value and an onChange parameter.\");\n  if (value == undefined) {\n    value = fakeValue;\n    onChange = event => {setFakeValue(event.target.value)};\n  }\n  \n  const handleScroll = event => {\n    backdropRef.current.scrollTop = textareaRef.current.scrollTop;\n    backdropRef.current.scrollLeft = textareaRef.current.scrollLeft;\n  };\n  const blockContainerScroll = handleScroll;\n\n  return (\n    <div className={containerClassName} style={containerStyle} onScroll={blockContainerScroll} >\n      <div className={styles.backdrop} ref={backdropRef}>\n        <HighlighedContents value={value} highlight={highlight}>\n        </HighlighedContents>\n      </div>\n      <textarea value={value} onChange={onChange} style={style} className={className} {...textareaProps} onScroll={handleScroll} ref={textareaRef} >\n      </textarea>\n    </div>\n  );\n}\n"],"sourceRoot":""}